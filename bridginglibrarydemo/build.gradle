plugins {
    alias(libs.plugins.android.library)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.mavenPublish)
}

android {
    namespace 'com.bridginglibrarydemo'
    compileSdk 35

    defaultConfig {
        minSdk 26
        targetSdk 34
        versionCode 1
        versionName "1.1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
}

dependencies {

    implementation libs.androidx.core.ktx
    implementation libs.androidx.appcompat
    implementation libs.material
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
}

/**Create github.properties in root project folder file with gpr.usr=GITHUB_USER_ID  & gpr.key=PERSONAL_ACCESS_TOKEN**/
def githubProperties = new Properties()
githubProperties.load(new FileInputStream(rootProject.file("local.properties")))


def getVersionName = { ->
    return "1.0.0" // Replace with version Name
}

def getArtificatId = { ->
    return "bridginglibrarydemo" // Replace with library name ID
}

publishing {
    publications {
        aar(MavenPublication) {
            groupId 'com.bridginglibrarydemo'
            artifactId getArtificatId()
            version getVersionName()
            artifact("$buildDir/outputs/aar/${getArtificatId()}-release.aar")
        }
    }
    def gitUserName =  githubProperties.getProperty("GPR_USER") ?: System.getenv("GPR_USER")
    def gitUserPassword =  githubProperties.getProperty("GPR_API_KEY") ?: System.getenv("GPR_API_KEY")
    repositories {
        maven {
            url "https://github.com/testingSeraphic/bridginglibrarydemo.git"  // Replace with your actual repository URL
            credentials {
                username = gitUserName  // Make sure these environment variables are set
                password = gitUserPassword
            }
        }
    }
}